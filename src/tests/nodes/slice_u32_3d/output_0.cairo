use array::{ArrayTrait, SpanTrait};
use orion::operators::tensor::{TensorTrait, Tensor};
use orion::operators::tensor::U32Tensor;

fn output_0() -> Tensor<u32> {
    let mut shape = ArrayTrait::<usize>::new();
    shape.append(3);
    shape.append(4);
    shape.append(5);

    let mut data = ArrayTrait::new();
    data.append(230);
    data.append(198);
    data.append(114);
    data.append(149);
    data.append(28);
    data.append(210);
    data.append(174);
    data.append(63);
    data.append(232);
    data.append(20);
    data.append(217);
    data.append(109);
    data.append(15);
    data.append(227);
    data.append(223);
    data.append(91);
    data.append(8);
    data.append(122);
    data.append(254);
    data.append(184);
    data.append(250);
    data.append(89);
    data.append(175);
    data.append(27);
    data.append(67);
    data.append(172);
    data.append(220);
    data.append(168);
    data.append(229);
    data.append(34);
    data.append(169);
    data.append(107);
    data.append(123);
    data.append(19);
    data.append(103);
    data.append(123);
    data.append(206);
    data.append(146);
    data.append(12);
    data.append(208);
    data.append(36);
    data.append(237);
    data.append(192);
    data.append(108);
    data.append(243);
    data.append(15);
    data.append(27);
    data.append(120);
    data.append(67);
    data.append(108);
    data.append(31);
    data.append(73);
    data.append(87);
    data.append(75);
    data.append(227);
    data.append(232);
    data.append(164);
    data.append(144);
    data.append(152);
    data.append(22);
    TensorTrait::new(shape.span(), data.span())
}
